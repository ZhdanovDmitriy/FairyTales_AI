import asyncio
from aiogram import types
from aiogram.filters import Command
from aiogram.types import Message
from dbtools import add_user, update_user_field, get_user_field, add_tale_if_not, \
    add_data_to_tale, get_tales_field,  update_tales_field, print_table, get_user_context_tale, is_user_exists
from config import START_MESSAGE, TEMPERATURE, client, bot, dp, LINK
from prompts import get_prompt, get_stub_message
from menu import get_menu_text, get_menu_keyboard
from keyboards import main_menu_keyboard, tale_end_keyboard
from logger import log_event, get_db_state
import re

clean_pattern = re.compile(r'[^a-zA-Z–∞-—è–ê-–Ø—ë–Å0-9 .,;:\'\"\-?/]+')

@dp.message()
async def chat_handler(message: types.Message):
    user_id = message.from_user.id

    if(not await is_user_exists(user_id)):
        await add_user(user_id, "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", None, "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", None, "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", message.message_id)#–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        await message.answer_photo(types.FSInputFile("source/Start_image.jpg"), caption=START_MESSAGE, reply_markup=main_menu_keyboard)
        await update_user_field(user_id, 'menu', "main_menu")

        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∞–∫—Ü–∏—é –±–æ—Ç–∞
        await log_event(user_id, "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –±–¥", "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", await get_db_state(user_id))
        return 
    
    if message.text == None:
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        print(f"[EXCEPT] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return
    user_message = clean_pattern.sub('', message.text)
    if user_message == "":
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        print(f"[EXCEPT] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return

    if await get_user_field(user_id, "process") == "yes":
        msg = await message.answer("–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –æ—Å—Ç–∞–ª–æ—Å—å —á—É—Ç—å-—á—É—Ç—å!‚òÑÔ∏è", parse_mode="Markdown")
        await asyncio.sleep(3)
        await msg.delete()
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        print(f"[EXCEPT] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∫–∞–∑–∫–∏")
        return

    await log_event(user_id, user_message, "–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ", await get_db_state(user_id))

    if user_message == "/start":
        await add_user(user_id, "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", None, "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", None, "–Ω–µ —É–∫–∞–∑–∞–Ω–æ", message.message_id)#–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        await message.answer_photo(types.FSInputFile("source/Start_image.jpg"), caption=START_MESSAGE, reply_markup=main_menu_keyboard)
        await update_user_field(user_id, 'menu', "main_menu")

        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∞–∫—Ü–∏—é –±–æ—Ç–∞
        await log_event(user_id, user_message, "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", await get_db_state(user_id))
        return

    elif await get_user_field(user_id, "menu") == "settings_menu_age":  
        try:
            if int(user_message) < 0 or int(user_message) > 100 :
                msg = await message.answer("üòØ–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —Ç—ã –≥–¥–µ-—Ç–æ –ª—É–∫–∞–≤–∏—à—å!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–π –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç.", parse_mode="Markdown")
                await asyncio.sleep(3)
                await msg.delete()
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
                return
            age_value = int(user_message)
            await update_user_field(user_id, 'age', age_value)
            await update_user_field(user_id, 'menu', "settings_menu")
            
            try:
                await bot.delete_message(chat_id=message.chat.id, message_id=await get_user_field(message.from_user.id, "last_message"))
                await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            except:
                print("[EXCEPT] –£–¥–∞–ª–µ–Ω–∏–µ –≤ handlers –Ω–µ —É–¥–∞–ª–æ—Å—å")

            await message.answer(await get_menu_text(lvl="settings_menu", user_id=user_id), parse_mode="Markdown", reply_markup=await get_menu_keyboard("settings_menu"))
            
            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
            await log_event(user_id, user_message, "–í–æ–∑—Ä–∞—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω", await get_db_state(user_id))

        except ValueError:
            msg = await message.answer("–î–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥, –¥–∞–≤–∞–π –±—É–¥–µ–º –ø–æ—Å–µ—Ä—å–µ–∑–Ω–µ–µüòâ\n–í–≤–µ–¥–∏ —á–∏—Å–ª–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ
            await log_event(user_id, user_message, "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞", await get_db_state(user_id))
            return
        return
    
    elif await get_user_field(user_id, "menu") == "settings_menu_hobby":
        if len(user_message) > 500:
            msg = await message.answer("–Ø –Ω–µ —Å–º–æ—É–≥ —Å—Ç–æ–ª—å–∫–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ —Å–≤–æ–π —Ä–∞—Å—Å–∫–∞–∑ —Ö–æ—Ç—è –±—ã –¥–æ 500 —Å–∏–º–≤–æ–ª–æ–≤.", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            return
        await update_user_field(user_id, 'hobby', user_message)
        await update_user_field(user_id, 'menu', "settings_menu")

        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=await get_user_field(message.from_user.id,"last_message"))
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except:
            print("[EXCEPT] –£–¥–∞–ª–µ–Ω–∏–µ –≤ handlers –Ω–µ —É–¥–∞–ª–æ—Å—å")

        await message.answer(await get_menu_text(lvl="settings_menu", user_id=user_id), parse_mode="Markdown", reply_markup=await get_menu_keyboard("settings_menu"))

        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–æ–±–±–∏
        await log_event(user_id, user_message, "–•–æ–±–±–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ", await get_db_state(user_id))
        return
    
    elif await get_user_field(user_id, "menu") == "settings_menu_name":
        if len(user_message) > 50:
            msg = await message.answer("–Ø –Ω–µ –º–æ–≥—É –ø–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —É —Ç–µ–±—è —Ç–∞–∫–æ–µ —Å–ª–æ–∂–Ω–æ–µ –∏–º—è.\n–ú–æ–∂–µ—Ç –±—ã—Ç—å —É —Ç–µ–±—è –µ—Å—Ç—å –±–æ–ª–µ–µ –∫—Ä–∞—Ç–∫–∞—è —Ñ–æ—Ä–º–∞ –∏–º–µ–Ω–∏?", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            return
        
        await update_user_field(user_id, 'name', user_message)
        await update_user_field(user_id, 'menu', "settings_menu")
        
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=await get_user_field(message.from_user.id,"last_message"))
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except:
            print("[EXCEPT] –£–¥–∞–ª–µ–Ω–∏–µ –≤ handlers –Ω–µ —É–¥–∞–ª–æ—Å—å")

        await message.answer(await get_menu_text(lvl="settings_menu", user_id=user_id), parse_mode="Markdown", reply_markup=await get_menu_keyboard("settings_menu"))

        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏
        await log_event(user_id, user_message, "–ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ", await get_db_state(user_id))
        return
    
    elif await get_user_field(user_id, "menu") == "hero_menu":
        if len(user_message) > 300:
            msg = await message.answer("–Ø —É–∂–µ –∑–∞–±—ã–ª, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏–ª –≤ –Ω–∞—á–∞–ª–µ.\n–ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Å–∫–∞–∑?", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            return
        await update_tales_field(await get_user_field(user_id, "cur_tale"), 'hero', user_message)
        await update_user_field(user_id, 'menu', "hero_menu")

        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=await get_user_field(message.from_user.id,"last_message"))
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except:
            print("[EXCEPT] –£–¥–∞–ª–µ–Ω–∏–µ –≤ handlers –Ω–µ —É–¥–∞–ª–æ—Å—å")

        await message.answer(await get_menu_text(lvl="tale_settings", user_id=user_id), parse_mode="Markdown", reply_markup=await get_menu_keyboard("tale_settings"))

        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–µ—Ä–æ—è
        await log_event(user_id, user_message, "–ì–µ—Ä–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω", await get_db_state(user_id))
        return
    
    elif await get_user_field(user_id, "menu") == "genre_menu":
        if len(user_message) > 300:
            msg = await message.answer("–Ø —É–∂–µ –∑–∞–±—ã–ª, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏–ª –≤ –Ω–∞—á–∞–ª–µ.\n–ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Å–∫–∞–∑?", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            return
        await update_tales_field(await get_user_field(user_id, "cur_tale"), 'genre', user_message)
        await update_user_field(user_id, 'menu', "genre_menu")

        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=await get_user_field(message.from_user.id,"last_message"))
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except:
            print("[EXCEPT] –£–¥–∞–ª–µ–Ω–∏–µ –≤ handlers –Ω–µ —É–¥–∞–ª–æ—Å—å")
        
        await message.answer(await get_menu_text(lvl="tale_settings", user_id=user_id), parse_mode="Markdown", reply_markup=await get_menu_keyboard("tale_settings"))

        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∂–∞–Ω—Ä–∞
        await log_event(user_id, user_message, "–ñ–∞–Ω—Ä –æ–±–Ω–æ–≤–ª–µ–Ω", await get_db_state(user_id))
        return
    
    elif await get_user_field(user_id, "menu") == "moral_menu":
        if len(user_message) > 300:
            msg = await message.answer("–Ø —É–∂–µ –∑–∞–±—ã–ª, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏–ª –≤ –Ω–∞—á–∞–ª–µ.\n–ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Å–∫–∞–∑?", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            return
        
        await update_tales_field(await get_user_field(user_id, "cur_tale"), 'moral', user_message)
        await update_user_field(user_id, 'menu', "moral_menu")

        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=await get_user_field(message.from_user.id,"last_message"))
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        except:
            print("[EXCEPT] –£–¥–∞–ª–µ–Ω–∏–µ –≤ handlers –Ω–µ —É–¥–∞–ª–æ—Å—å")
        
        await message.answer(await get_menu_text(lvl="tale_settings", user_id=user_id), parse_mode="Markdown", reply_markup=await get_menu_keyboard("tale_settings"))

        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ—Ä–∞–ª–∏
        await log_event(user_id, user_message, "–ú–æ—Ä–∞–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞", await get_db_state(user_id))
        return
    
    elif await get_user_field(user_id, "menu") == "tale_menu":
        await update_user_field(user_id, 'process', "yes")
        tale_num = await get_user_field(user_id, "cur_tale")
        size = await get_tales_field(tale_num, "tale_size")
        if(await get_tales_field(tale_num, "cur_stage") == None):
            await update_tales_field(tale_num, 'cur_stage', 0)
        await add_tale_if_not(tale_num, size)
        stage = await get_tales_field(tale_num, 'cur_stage')

        if len(user_message) > 500:
            msg = await message.answer("–Ø —É–∂–µ –∑–∞–±—ã–ª, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏–ª –≤ –Ω–∞—á–∞–ª–µ.\n–ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Å–∫–∞–∑?", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            await update_user_field(user_id, 'process', "no")
            return
        
        if(stage >= size):
            msg = await message.answer("–¢–≤–æ—è —Å–∫–∞–∑–∫–∞ –ø–æ–¥–æ—à–ª–∞ –∫ –∫–æ–Ω—Ü—É!\n–¢—ã –º–æ–∂–µ—à—å –∑–∞–∫–æ–Ω—á–∏—Ç—å —ç—Ç—É —Å–∫–∞–∑–∫—É –∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é!", parse_mode="Markdown")
            await asyncio.sleep(3)
            await msg.delete()
            await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            await update_user_field(user_id, 'process', "no")
            return

        stage = stage + 1
        print(f"stage = {stage}")
        await update_tales_field(tale_num, 'cur_stage', stage)

        prompt = await get_prompt(user_message, user_id, tale_num)
        await add_data_to_tale(tale_num, prompt, size)
        msg = await message.answer(await get_stub_message(), parse_mode="Markdown")
        response = await client.chat.completions.create(
            model="deepseek-chat",
            messages=await get_user_context_tale(tale_num, size),
            stream=False,
            temperature=TEMPERATURE,
            parallel_tool_calls=True
        )
        bot_response = response.choices[0].message.content
        await message.delete()
        await msg.delete()
        
        await add_data_to_tale(tale_num, bot_response, size)
        await print_table("tales")
        await print_table("small_tale")

        if(stage == size):
            await message.answer(bot_response, parse_mode="Markdown", reply_markup=tale_end_keyboard)
            #–£–¥–∞–ª–∏—Ç—å –≤ release –≤–µ—Ä—Å–∏–∏
            await message.answer(f"\n–ö–æ–Ω–µ—Ü!\n–Ø –æ—á–µ–Ω—å —Ä–∞–¥, —á—Ç–æ —Ç—ã –ø–æ–±—ã–≤–∞–ª –≤ –º–æ–µ–π —Å–∫–∞–∑–∫–µ!\n\n–°–µ–π—á–∞—Å —è —É—á—É—Å—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏ –µ—â—ë –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ, –∏ —Ç–≤–æ—è –ø–æ–º–æ—â—å –º–Ω–µ –æ—á–µ–Ω—å –Ω—É–∂–Ω–∞! –ï—Å–ª–∏ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å —ç—Ç–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å ‚Äî —Å–∫–∞–∂–∏ –º–Ω–µ!\n\n–ó–∞–ø–æ–ª–Ω–∏ —ç—Ç—É [—Ñ–æ—Ä–º—É]({LINK}) –∏ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ–±–µ —è —Å—Ç–∞–Ω—É –ª—É—á—à–µ‚ú®\n\n_–†–µ–∫–æ–º–µ–Ω–¥—É—é –≤–ø–µ—Ä–≤—ã–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ—ë —á–µ—Ä–µ–∑ 2-3 –∏—Å—Ç–æ—Ä–∏–∏_\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—à—å –º–Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–∞–º—ã–µ –ª—É—á—à–∏–µ —Å–∫–∞–∑–∫–∏ –Ω–∞ —Å–≤–µ—Ç–µ! üíô",parse_mode="Markdown", reply_markup=tale_end_keyboard)
            # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–∫–∞–∑–∫–∏
            await log_event(user_id, user_message, "–°–∫–∞–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", await get_db_state(user_id))
        else:
            await message.answer(bot_response, parse_mode="Markdown", reply_markup=await get_menu_keyboard("tale_menu"))
            
            # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—é—â—É—é—Å—è —Å–∫–∞–∑–∫—É
            await log_event(user_id, user_message, "–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–∫–∞–∑–∫–∏", await get_db_state(user_id))

        await update_user_field(user_id, 'process', "no")
        return
    
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    except:
        print("[EXCEPT] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")